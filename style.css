/* Colors */

:root {
  /* Primary colors */
  --moderate-violet: hsl(263, 55%, 52%);
  --very-dark-grayish-blue: hsl(217, 19%, 35%);
  --very-dark-blackish-blue: hsl(219, 29%, 14%);
  --white: hsl(0, 0%, 100%);

  /* Neutral Colors */
  --Light-gray: hsl(0, 0%, 81%);
  --light-grayish-blue: hsl(210, 46%, 95%);
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-size: 13px;
}

body {
  background-color: var(--light-grayish-blue);
  font-family: Barlow Semi Condensed;
}

.container {
  max-width: 1200px;
  width: 100%;
  height: 100%;
  min-width: 300px;
  padding: 4rem 2rem;
  margin: 0 auto;
}
.grid {
  width: 100%;
  display: grid;
  gap: 2rem;
}
.card {
  padding: 2rem 3rem;
  border-radius: 1rem;
  display: flex;
  flex-direction: column;
  color: white;
}

.flex {
  display: flex;
  align-items: center;
}

.avatar {
  height: 50px;
  width: 50px;
  display: block;
  border-radius: 50%;
  margin-right: 1.5rem;
}

.user-details {
  line-height: 1rem;
  margin-top: 5px;
}

h1 {
  line-height: 2rem;
  margin: 1.5rem 0;
  font-size: 1.8rem;
  font-weight: 600;
}
p {
  line-height: 2rem;
  color: var(--light-grayish-blue);
  font-weight: 500;
}

q {
  line-height: 1.8rem;
}

.faded-text {
  opacity: 0.7;
}

/* Backgrounds colors */

.bg-purple {
  background: var(--moderate-violet) url(../images/bg-pattern-quotation.svg) no-repeat top 10px right 100px;
}

.bg-gray {
  background-color: var(--very-dark-grayish-blue);
}

.bg-black {
  background-color: var(--very-dark-blackish-blue);
}

.bg-white {
  background-color: var(--white);
  color: var(--very-dark-blackish-blue);
}

.attribution {
  width: 100%;
  text-align: center;
}

/* Media quries for display of 1200px or more */

@media screen and (min-width: 1025px) {
  .container {
    padding: 4rem 0;
  }
  .grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(2, 1fr);
    width: 100%;
    gap: 2rem;
  }

  .card {
    padding: 1.5rem 2.25rem;
    height: auto;
  }
  .small-1 {
    grid-area: 1 / 3 / span 1 / span 1;
  }

  .small-2 {
    grid-area: 2 / 1 / span 1 / span 1;
  }

  .wide-1 {
    grid-area: 1 / 1 / span 1 / span 2;
  }
  .wide-2 {
    grid-area: 2 / 2 / span 1 / span 2;
  }
  .long {
    grid-area: 1 / 4 / span 2 / span 1;
  }
}
